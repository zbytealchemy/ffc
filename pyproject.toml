[tool.poetry]
name = "ffc-python"
version = "1.0.0"
description = "AI Agent Framework"
authors = ["Zbigniew Mastylo <zmastylo@gmail.com>"]
readme = "README.md"
packages = [
    {include = "ffc", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.5.2"
psutil = "^5.9.7"
typing-extensions = "^4.5.0"
jsonschema = "^4.21.1"
openai = "^1.12.0"
jinja2 = "^3.1.3"
tiktoken = ">=0.5.2"
setuptools = ">=70.0.0"
kubernetes = "^28.1.0"
aiohttp = "^3.11.10"
pymdown-extensions = "^10.12"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
mypy = "^1.4.1"
ruff = "^0.1.5"
flake8 = "^7.1.1"
flake8-bandit = "^4.1.1"
autopep8 = "^2.3.1"
debugpy = "^1.8.0"
watchdog = "^3.0.0"
types-psutil = "^6.1.0.20241102"
types-jsonschema = "^4.23.0.20241208"
pre-commit = "^4.0.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"
mkdocs-autorefs = "^0.5.0"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_mode = "strict"

[tool.ruff]
line-length = 100
ignore = [
    "E501",  # line too long
    "UP007", # pyupgrade
]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "RUF", # Ruff-specific rules
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S108"]  # Allow assert statements/temp files in tests
"src/ffc/core/health.py" = [
    "N802",  # Allow uppercase in do_GET as it's from http.server
    "S104",  # Allow binding to all interfaces for health check server
]

[mypy]
ignore_missing_imports = true
